{"version":3,"sources":["redux/actions.js","Components/GameControls/GameControls.js","Components/Board/Board.js","Components/HoverSquaresList/HoverSquaresList.js","App.js","redux/reducers/sizeBoardReducer.js","redux/reducers/squareReducer.js","redux/reducers/rootReducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["CHANGE_SIZE_BOARD","ADD_HOVER_SQUARE","REMOVE_HOVER_SQUARE","GameControls","useState","selectValue","setSelectValue","sizeBoardOptions","setsizeBoardOptions","loading","setLoading","dispatch","useDispatch","useEffect","axios","get","then","res","data","finally","className","onChange","e","target","value","defaultValue","disabled","Object","entries","map","item","i","onClick","type","payload","Board","row","useRef","handleHover","addHoverItem","removeHoverItem","style","backgroundColor","current","col","id","getRow","currentTarget","valueToCreateBoard","useSelector","state","sizeBoard","mode","rows","squares","push","onMouseEnter","k","buildField","HoverSquaresList","listHovers","prevState","square","hovers","el","App","createBoardReducer","action","hoverReducer","filter","rootReducer","combineReducers","sizeBoardReducer","squareReducer","store","createStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.046e1c76.chunk.js","sourcesContent":["export const CHANGE_SIZE_BOARD = \"CHANGE_SIZE_BOARD\";\nexport const ADD_HOVER_SQUARE = \"ADD_HOVER_SQUARER\";\nexport const REMOVE_HOVER_SQUARE = \"REMOVE_HOVER_SQUARE\";\n\nexport const changeBoard = (changeValue) => {\n  return {\n    type: CHANGE_SIZE_BOARD,\n    payload: changeValue,\n  };\n};\n\nexport const addHover = (addHoverItem) => {\n  return {\n    type: ADD_HOVER_SQUARE,\n    payload: addHoverItem,\n  };\n};\n\nexport const removeHover = (removeHoverItem) => {\n  return {\n    type: REMOVE_HOVER_SQUARE,\n    payload: removeHoverItem,\n  };\n};\n","import React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeBoard } from \"../../redux/actions\";\nimport \"./GameControls.css\";\n\nconst GameControls = () => {\n  const [selectValue, setSelectValue] = useState(0);\n  const [sizeBoardOptions, setsizeBoardOptions] = useState({});\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(\"https://demo1030918.mockable.io/\")\n      .then(res => res.data)\n      .then(data => setsizeBoardOptions(data)) \n      .finally(() => setLoading(false))\n  }, []);\n\n\n  \n\n\n  if (loading) {\n    return <h1>Please wait while data is loading?...</h1>;\n  }\n\n  return (\n    <div className=\"wrap\">\n      <select\n        \n        onChange={e=>setSelectValue(e.target.value)}\n        defaultValue=\"\"\n        className=\"select\"\n      >\n        <option value=\"\" disabled>\n          Pick mode\n        </option>\n        {Object.entries(sizeBoardOptions).map((item, i) => {\n          return (\n            <option value={item[1][\"field\"]} key={i}>\n              {item[0]}\n            </option>\n          );\n        })}\n      </select>\n      <button\n        onClick={() => dispatch(changeBoard(selectValue))}\n        disabled={!selectValue}\n      >\n        START\n      </button>\n    </div>\n  );\n};\n\nexport default GameControls;\n","import React from \"react\";\nimport { addHover, removeHover } from \"../../redux/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRef } from \"react\";\nimport \"./Board.css\";\n\nconst Board = () => {\n  const dispatch = useDispatch();\n\n  const row = useRef(null);\n\n  const handleHover = e => {\n   \n    if (e.target.style.backgroundColor === \"blue\") {\n      e.target.style.backgroundColor = \"white\";\n      dispatch(removeHover({ row: row.current, col: e.target.id }));\n    } else {\n      e.target.style.backgroundColor = \"blue\";\n      dispatch(addHover({ row: row.current, col: e.target.id }));\n    }\n  }\n\n  \n\n  function getRow(e) {\n    row.current = e.currentTarget.id;\n  }\n\n  let valueToCreateBoard = useSelector((state) => state.sizeBoard.mode);\n\n  const buildField = () => {\n    const rows = [];\n    const squares = [];\n    for (let i = 0; i < valueToCreateBoard; i++) {\n      squares.push(\n        <div\n          className=\"square\"\n          key={i}\n          id={i + 1}\n          onMouseEnter={(e) => handleHover(e)}\n        ></div>\n      );\n    }\n    for (let k = 0; k < valueToCreateBoard; k++) {\n      rows.push(\n        <div className=\"row\" id={k + 1} key={k} onMouseEnter={(e) => getRow(e)}>\n          {squares}\n        </div>\n      );\n    }\n\n    return rows;\n  };\n\n  return <div className=\"board\">{buildField()}</div>;\n};;\n\nexport default Board;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./HoverSquaresList.css\";\n\nconst HoverSquaresList = () => {\n\n  let listHovers = useSelector(prevState => prevState.square.hovers);\n\n  return (\n    <div className=\"container\">\n      <h1>Hover squares</h1>\n\n      {listHovers.map((el, i) => {\n        return (\n          <div className=\"hover-square\" key={i}>\n            <p>\n              row {el[\"row\"]} col {el[\"col\"]}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HoverSquaresList;\n","import React from \"react\";\nimport GameControls from \"./Components/GameControls/GameControls\";\nimport Board from \"./Components/Board/Board\";\nimport HoverSquaresList from \"./Components/HoverSquaresList/HoverSquaresList\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <main className=\"App\">\n      <section>\n        <GameControls />\n        <Board />\n      </section>\n      <section>\n        <HoverSquaresList />\n      </section>\n    </main>\n  );\n};\nexport default App;\n","import { CHANGE_SIZE_BOARD } from \"../actions\";\n\nconst createBoardReducer = (state = { mode: 3 }, action) => {\n  switch (action.type) {\n    case CHANGE_SIZE_BOARD:\n      return {\n        ...state,\n        mode: action.payload,\n      };\n    \n    default:\n      return state;\n  }\n};\n\nexport default createBoardReducer;","import { ADD_HOVER_SQUARE, REMOVE_HOVER_SQUARE } from \"../actions\";\n\nconst hoverReducer = (state = {hovers: []}, action) => {\n  switch (action.type) {\n    case ADD_HOVER_SQUARE:\n      return {\n        ...state,\n        hovers: [...state.hovers, action.payload],\n      };\n\n    case REMOVE_HOVER_SQUARE:\n      return {\n        ...state,\n        hovers: state.hovers.filter(\n          square =>\n            square.row !== action.payload.row ||\n            square.col !== action.payload.col\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default hoverReducer;","import { combineReducers } from \"redux\";\nimport sizeBoardReducer from \"./sizeBoardReducer\";\nimport squareReducer from \"./squareReducer\";\n\nconst rootReducer = combineReducers({\n  sizeBoard: sizeBoardReducer,\n  square: squareReducer,\n});\n\nexport default rootReducer;\n\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}